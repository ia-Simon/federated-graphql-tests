package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"
	"errors"
	"log/slog"
	"todo-subgraph/graph/model"
)

// FindTodoByID is the resolver for the findTodoByID field.
func (r *entityResolver) FindTodoByID(ctx context.Context, id string) (*model.Todo, error) {
	todo := model.Todo{
		User: new(model.User),
	}
	err := r.Datastore.QueryRowContext(ctx, `
		SELECT t.id, t.text_data, t.is_done, t.user_id FROM "todo" t
		WHERE t.id = $1;`,
		id,
	).Scan(&todo.ID, &todo.Text, &todo.Done, &todo.User.ID)
	if err != nil {
		slog.Error("todo not found", slog.Any("error", err), slog.String("todoID", id))
		return nil, errors.New("todo not found")
	}

	return &todo, nil
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
